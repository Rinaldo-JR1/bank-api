// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Accounts {
  id        String         @id @default(cuid())
  email     String         @unique
  name      String?
  cpf       String         @unique
  password  String
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  balance   Float
  sent      Transactions[] @relation("TransactionSender")
  received  Transactions[] @relation("TransactionReceiver")
  Deposits  Deposits[]
  Withdraws Withdraws[]
}

model Deposits {
  id        String   @id @default(cuid())
  accountId String
  amount    Float
  createdAt DateTime @default(now())
  account   Accounts @relation(fields: [accountId], references: [id])
}

model Withdraws {
  id        String   @id @default(cuid())
  accountId String
  amount    Float
  createdAt DateTime @default(now())
  account   Accounts @relation(fields: [accountId], references: [id])
}

model Transactions {
  id         String   @id @default(cuid())
  senderId   String
  receiverId String
  amount     Float
  createdAt  DateTime @default(now())
  sender     Accounts @relation("TransactionSender", fields: [senderId], references: [id])
  receiver   Accounts @relation("TransactionReceiver", fields: [receiverId], references: [id])
}
